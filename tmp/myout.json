Testing  void void
Testing  identifier _sysy_starttime
Testing  l_paren (
Testing  int int
Testing  identifier lineno
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_stoptime
Testing  l_paren (
Testing  int int
Testing  identifier lineno
Testing  r_paren )
Testing  semi ;
Testing  int int
Testing  identifier _sysy_getch
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  int int
Testing  identifier a
Testing  r_paren )
Testing  semi ;
Testing  int int
Testing  identifier _sysy_getint
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putint
Testing  l_paren (
Testing  int int
Testing  identifier a
Testing  r_paren )
Testing  semi ;
Testing  int int
Testing  identifier _sysy_getarray
Testing  l_paren (
Testing  int int
Testing  identifier a
Testing  l_square [
Testing  r_square ]
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putarray
Testing  l_paren (
Testing  int int
Testing  identifier n
Testing  comma ,
Testing  int int
Testing  identifier a
Testing  l_square [
Testing  r_square ]
Testing  r_paren )
Testing  semi ;
Testing  float float
Testing  identifier _sysy_getfloat
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putfloat
Testing  l_paren (
Testing  float float
Testing  identifier a
Testing  r_paren )
Testing  semi ;
Testing  int int
Testing  identifier _sysy_getfarray
Testing  l_paren (
Testing  float float
Testing  identifier a
Testing  l_square [
Testing  r_square ]
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putfarray
Testing  l_paren (
Testing  int int
Testing  identifier n
Testing  comma ,
Testing  float float
Testing  identifier a
Testing  l_square [
Testing  r_square ]
Testing  r_paren )
Testing  semi ;
Testing  void void
Testing  identifier _sysy_putf
Testing  l_paren (
Testing  char char
Testing  identifier a
Testing  l_square [
Testing  r_square ]
Testing  comma ,
Testing  ellipsis ...
Testing  r_paren )
Testing  semi ;
Testing  const const
Testing  float float
Testing  identifier RADIUS
Testing  equal =
Testing  numeric_constant 5.5
Testing  comma ,
Testing  identifier PI
Testing  equal =
Testing  numeric_constant 03.141592653589793
Testing  comma ,
Testing  identifier EPS
Testing  equal =
Testing  numeric_constant 1e-6
Testing  semi ;
Testing  const const
Testing  float float
Testing  identifier PI_HEX
Testing  equal =
Testing  numeric_constant 0x1.921fb6p+1
Testing  comma ,
Testing  identifier HEX2
Testing  equal =
Testing  numeric_constant 0x.AP-3
Testing  semi ;
Testing  const const
Testing  float float
Testing  identifier FACT
Testing  equal =
Testing  minus -
Testing  numeric_constant .33E+5
Testing  comma ,
Testing  identifier EVAL1
Testing  equal =
Testing  identifier PI
Testing  star *
Testing  identifier RADIUS
Testing  star *
Testing  identifier RADIUS
Testing  comma ,
Testing  identifier EVAL2
Testing  equal =
Testing  numeric_constant 2
Testing  star *
Testing  identifier PI_HEX
Testing  star *
Testing  identifier RADIUS
Testing  comma ,
Testing  identifier EVAL3
Testing  equal =
Testing  identifier PI
Testing  star *
Testing  numeric_constant 2.1
Testing  star *
Testing  identifier RADIUS
Testing  semi ;
Testing  const const
Testing  float float
Testing  identifier CONV1
Testing  equal =
Testing  numeric_constant 233
Testing  comma ,
Testing  identifier CONV2
Testing  equal =
Testing  numeric_constant 0xfff
Testing  semi ;
Testing  const const
Testing  int int
Testing  identifier MAX
Testing  equal =
Testing  numeric_constant 1e9
Testing  comma ,
Testing  identifier TWO
Testing  equal =
Testing  numeric_constant 2.9
Testing  comma ,
Testing  identifier THREE
Testing  equal =
Testing  numeric_constant 3.2
Testing  comma ,
Testing  identifier FIVE
Testing  equal =
Testing  identifier TWO
Testing  plus +
Testing  identifier THREE
Testing  semi ;
Testing  float float
Testing  identifier float_abs
Testing  l_paren (
Testing  float float
Testing  identifier x
Testing  r_paren )
Testing  l_brace {
Testing  if if
Testing  l_paren (
Testing  identifier x
Testing  less <
Testing  numeric_constant 0
Testing  r_paren )
Testing  return return
Testing  minus -
Testing  identifier x
Testing  semi ;
Testing  return return
Testing  identifier x
Testing  semi ;
Testing  r_brace }
Testing  float float
Testing  identifier circle_area
Testing  l_paren (
Testing  int int
Testing  identifier radius
Testing  r_paren )
Testing  l_brace {
Testing  return return
Testing  l_paren (
Testing  identifier PI
Testing  star *
Testing  identifier radius
Testing  star *
Testing  identifier radius
Testing  plus +
Testing  l_paren (
Testing  identifier radius
Testing  star *
Testing  identifier radius
Testing  r_paren )
Testing  star *
Testing  identifier PI
Testing  r_paren )
Testing  slash /
Testing  numeric_constant 2
Testing  semi ;
Testing  r_brace }
Testing  int int
Testing  identifier float_eq
Testing  l_paren (
Testing  float float
Testing  identifier a
Testing  comma ,
Testing  float float
Testing  identifier b
Testing  r_paren )
Testing  l_brace {
Testing  if if
Testing  l_paren (
Testing  identifier float_abs
Testing  l_paren (
Testing  identifier a
Testing  minus -
Testing  identifier b
Testing  r_paren )
Testing  less <
Testing  identifier EPS
Testing  r_paren )
Testing  l_brace {
Testing  return return
Testing  numeric_constant 1
Testing  star *
Testing  numeric_constant 2.
Testing  slash /
Testing  numeric_constant 2
Testing  semi ;
Testing  r_brace }
Testing  else else
Testing  l_brace {
Testing  return return
Testing  numeric_constant 0
Testing  semi ;
Testing  r_brace }
Testing  r_brace }
Testing  void void
Testing  identifier error
Testing  l_paren (
Testing  r_paren )
Testing  l_brace {
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 101
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 114
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 114
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 111
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 114
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 10
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  void void
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  l_brace {
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 111
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 107
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 10
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  void void
Testing  identifier assert
Testing  l_paren (
Testing  int int
Testing  identifier cond
Testing  r_paren )
Testing  l_brace {
Testing  if if
Testing  l_paren (
Testing  exclaim !
Testing  identifier cond
Testing  r_paren )
Testing  l_brace {
Testing  identifier error
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  else else
Testing  l_brace {
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  r_brace }
Testing  void void
Testing  identifier assert_not
Testing  l_paren (
Testing  int int
Testing  identifier cond
Testing  r_paren )
Testing  l_brace {
Testing  if if
Testing  l_paren (
Testing  identifier cond
Testing  r_paren )
Testing  l_brace {
Testing  identifier error
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  else else
Testing  l_brace {
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  r_brace }
Testing  r_brace }
Testing  int int
Testing  identifier main
Testing  l_paren (
Testing  r_paren )
Testing  l_brace {
Testing  identifier assert_not
Testing  l_paren (
Testing  identifier float_eq
Testing  l_paren (
Testing  identifier HEX2
Testing  comma ,
Testing  identifier FACT
Testing  r_paren )
Testing  r_paren )
Testing  semi ;
Testing  identifier assert_not
Testing  l_paren (
Testing  identifier float_eq
Testing  l_paren (
Testing  identifier EVAL1
Testing  comma ,
Testing  identifier EVAL2
Testing  r_paren )
Testing  r_paren )
Testing  semi ;
Testing  identifier assert
Testing  l_paren (
Testing  identifier float_eq
Testing  l_paren (
Testing  identifier EVAL2
Testing  comma ,
Testing  identifier EVAL3
Testing  r_paren )
Testing  r_paren )
Testing  semi ;
Testing  identifier assert
Testing  l_paren (
Testing  identifier float_eq
Testing  l_paren (
Testing  identifier circle_area
Testing  l_paren (
Testing  identifier RADIUS
Testing  r_paren )
Testing  comma ,
Testing  identifier circle_area
Testing  l_paren (
Testing  identifier FIVE
Testing  r_paren )
Testing  r_paren )
Testing  r_paren )
Testing  semi ;
Testing  identifier assert_not
Testing  l_paren (
Testing  identifier float_eq
Testing  l_paren (
Testing  identifier CONV1
Testing  comma ,
Testing  identifier CONV2
Testing  r_paren )
Testing  r_paren )
Testing  semi ;
Testing  if if
Testing  l_paren (
Testing  numeric_constant 1.5
Testing  r_paren )
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  if if
Testing  l_paren (
Testing  exclaim !
Testing  exclaim !
Testing  numeric_constant 3.3
Testing  r_paren )
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  if if
Testing  l_paren (
Testing  numeric_constant .0
Testing  ampamp &&
Testing  numeric_constant 3
Testing  r_paren )
Testing  identifier error
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  if if
Testing  l_paren (
Testing  numeric_constant 0
Testing  pipepipe ||
Testing  numeric_constant 0.3
Testing  r_paren )
Testing  identifier ok
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  int int
Testing  identifier i
Testing  equal =
Testing  numeric_constant 1
Testing  comma ,
Testing  identifier p
Testing  equal =
Testing  numeric_constant 0
Testing  semi ;
Testing  float float
Testing  identifier arr
Testing  l_square [
Testing  numeric_constant 10
Testing  r_square ]
Testing  equal =
Testing  l_brace {
Testing  numeric_constant 1.
Testing  comma ,
Testing  numeric_constant 2
Testing  r_brace }
Testing  semi ;
Testing  int int
Testing  identifier len
Testing  equal =
Testing  identifier _sysy_getfarray
Testing  l_paren (
Testing  identifier arr
Testing  r_paren )
Testing  semi ;
Testing  while while
Testing  l_paren (
Testing  identifier i
Testing  less <
Testing  identifier MAX
Testing  r_paren )
Testing  l_brace {
Testing  float float
Testing  identifier input
Testing  equal =
Testing  identifier _sysy_getfloat
Testing  l_paren (
Testing  r_paren )
Testing  semi ;
Testing  float float
Testing  identifier area
Testing  equal =
Testing  identifier PI
Testing  star *
Testing  identifier input
Testing  star *
Testing  identifier input
Testing  comma ,
Testing  identifier area_trunc
Testing  equal =
Testing  identifier circle_area
Testing  l_paren (
Testing  identifier input
Testing  r_paren )
Testing  semi ;
Testing  identifier arr
Testing  l_square [
Testing  identifier p
Testing  r_square ]
Testing  equal =
Testing  identifier arr
Testing  l_square [
Testing  identifier p
Testing  r_square ]
Testing  plus +
Testing  identifier input
Testing  semi ;
Testing  identifier _sysy_putfloat
Testing  l_paren (
Testing  identifier area
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 32
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putint
Testing  l_paren (
Testing  identifier area_trunc
Testing  r_paren )
Testing  semi ;
Testing  identifier _sysy_putch
Testing  l_paren (
Testing  numeric_constant 10
Testing  r_paren )
Testing  semi ;
Testing  identifier i
Testing  equal =
Testing  identifier i
Testing  star *
Testing  minus -
Testing  minus -
Testing  numeric_constant 1e1
Testing  semi ;
Testing  identifier p
Testing  equal =
Testing  identifier p
Testing  plus +
Testing  numeric_constant 1
Testing  semi ;
Testing  r_brace }
Testing  identifier _sysy_putfarray
Testing  l_paren (
Testing  identifier len
Testing  comma ,
Testing  identifier arr
Testing  r_paren )
Testing  semi ;
Testing  return return
Testing  numeric_constant 0
Testing  semi ;
Testing  r_brace }
Testing  eof 
{"inner":[{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"lineno","type":{"qualType":"int"}}],"kind":"FunctionDecl","name":"_sysy_starttime","type":{"qualType":"void()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"lineno","type":{"qualType":"int"}}],"kind":"FunctionDecl","name":"_sysy_stoptime","type":{"qualType":"void()"}},{"funcReturnType":"int","kind":"FunctionDecl","name":"_sysy_getch","type":{"qualType":"int()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"int"}}],"kind":"FunctionDecl","name":"_sysy_putch","type":{"qualType":"void()"}},{"funcReturnType":"int","kind":"FunctionDecl","name":"_sysy_getint","type":{"qualType":"int()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"int"}}],"kind":"FunctionDecl","name":"_sysy_putint","type":{"qualType":"void()"}},{"funcReturnType":"int","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"int*"}}],"kind":"FunctionDecl","name":"_sysy_getarray","type":{"qualType":"int()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"n","type":{"qualType":"int"}},{"kind":"ParmVarDecl","name":"a","type":{"qualType":"int*"}}],"kind":"FunctionDecl","name":"_sysy_putarray","type":{"qualType":"void()"}},{"funcReturnType":"float","kind":"FunctionDecl","name":"_sysy_getfloat","type":{"qualType":"float()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"float"}}],"kind":"FunctionDecl","name":"_sysy_putfloat","type":{"qualType":"void()"}},{"funcReturnType":"int","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"float*"}}],"kind":"FunctionDecl","name":"_sysy_getfarray","type":{"qualType":"int()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"n","type":{"qualType":"int"}},{"kind":"ParmVarDecl","name":"a","type":{"qualType":"float*"}}],"kind":"FunctionDecl","name":"_sysy_putfarray","type":{"qualType":"void()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"char*"}}],"kind":"FunctionDecl","name":"_sysy_putf","type":{"qualType":"void(, ...)"}},{"inner":[{"castKind":"FloatingCast","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"5.5"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"RADIUS","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingCast","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"3.1415926535897931"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"PI","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingCast","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"9.9999999999999995E-7"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"EPS","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingCast","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"3.1415927410125732"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"PI_HEX","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingCast","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"0.078125"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"HEX2","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingCast","inner":[{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"33000"}],"kind":"UnaryOperator","opcode":"-","type":{"qualType":"double"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"FACT","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"RADIUS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"RADIUS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}}],"kind":"VarDecl","name":"EVAL1","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"inner":[{"inner":[{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"2"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI_HEX","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"RADIUS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}}],"kind":"VarDecl","name":"EVAL2","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"2.1000000000000001"}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"RADIUS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}}],"kind":"VarDecl","name":"EVAL3","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"IntegralToFloating","inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"233"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"CONV1","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"IntegralToFloating","inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"4095"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"CONV2","opcode":"=","type":{"qualType":"const float"}},{"inner":[{"castKind":"FloatingToIntegral","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"1.0E+9"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"MAX","opcode":"=","type":{"qualType":"const int"}},{"inner":[{"castKind":"FloatingToIntegral","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"2.8999999999999999"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"TWO","opcode":"=","type":{"qualType":"const int"}},{"inner":[{"castKind":"FloatingToIntegral","inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"3.2000000000000002"}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"THREE","opcode":"=","type":{"qualType":"const int"}},{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"TWO"}],"kind":"ImplicitCastExpr"},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"THREE"}],"kind":"ImplicitCastExpr"}],"kind":"BinaryOperator","opcode":"+"}],"kind":"VarDecl","name":"FIVE","opcode":"=","type":{"qualType":"const int"}},{"funcReturnType":"float","inner":[{"kind":"ParmVarDecl","name":"x","type":{"qualType":"float"}},{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"x","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"0"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"<","type":{"qualType":"float"}},{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"x","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"UnaryOperator","opcode":"-","type":{"qualType":"float"}}],"kind":"ReturnStmt"}],"kind":"IfStmt"},{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"x","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"ReturnStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"float_abs","type":{"qualType":"float()"}},{"funcReturnType":"float","inner":[{"kind":"ParmVarDecl","name":"radius","type":{"qualType":"int"}},{"inner":[{"inner":[{"inner":[{"inner":[{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"radius","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}},{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"radius","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}},{"inner":[{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"radius","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"radius","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"int"}}],"kind":"ParenExpr","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"+","type":{"qualType":"float"}}],"kind":"ParenExpr","type":{"qualType":"float"}},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"2"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"/","type":{"qualType":"float"}}],"kind":"ReturnStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"circle_area","type":{"qualType":"float()"}},{"funcReturnType":"int","inner":[{"kind":"ParmVarDecl","name":"a","type":{"qualType":"float"}},{"kind":"ParmVarDecl","name":"b","type":{"qualType":"float"}},{"inner":[{"inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_abs","type":{"qualType":"float()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float()"}},{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"a","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"b","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"-","type":{"qualType":"float"}}],"kind":"CallExpr","type":{"qualType":"float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"EPS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"BinaryOperator","opcode":"<","type":{"qualType":"float"}},{"inner":[{"inner":[{"inner":[{"inner":[{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"1"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}},{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"2"}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"2"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"/","type":{"qualType":"float"}}],"kind":"ReturnStmt"}],"kind":"CompoundStmt"},{"inner":[{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"0"}],"kind":"ReturnStmt"}],"kind":"CompoundStmt"}],"kind":"IfStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"float_eq","type":{"qualType":"int()"}},{"funcReturnType":"void","inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"101"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"114"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"114"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"111"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"114"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"10"}],"kind":"CallExpr"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"error","type":{"qualType":"void()"}},{"funcReturnType":"void","inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"111"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"107"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"10"}],"kind":"CallExpr"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"ok","type":{"qualType":"void()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"cond","type":{"qualType":"int"}},{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"cond","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"UnaryOperator","opcode":"!","type":{"qualType":"int"}},{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"error","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"CompoundStmt"},{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"ok","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"CompoundStmt"}],"kind":"IfStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"assert","type":{"qualType":"void()"}},{"funcReturnType":"void","inner":[{"kind":"ParmVarDecl","name":"cond","type":{"qualType":"int"}},{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"cond","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}},{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"error","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"CompoundStmt"},{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"ok","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"CompoundStmt"}],"kind":"IfStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"assert_not","type":{"qualType":"void()"}},{"funcReturnType":"int","inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"assert_not","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_eq","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"HEX2","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"FACT","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"assert_not","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_eq","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"EVAL1","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"EVAL2","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"assert","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_eq","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"EVAL2","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"EVAL3","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"assert","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_eq","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"circle_area","type":{"qualType":"float()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"RADIUS","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"CallExpr","type":{"qualType":"float"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"circle_area","type":{"qualType":"float()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"FIVE","type":{"qualType":"const int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const int"}}],"kind":"CallExpr","type":{"qualType":"float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"assert_not","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"float_eq","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"CONV1","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"CONV2","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"CallExpr"},{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"1.5"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"ok","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"IfStmt"},{"inner":[{"inner":[{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"3.2999999999999998"}],"kind":"UnaryOperator","opcode":"!","type":{"qualType":"double"}}],"kind":"UnaryOperator","opcode":"!","type":{"qualType":"double"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"ok","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"IfStmt"},{"inner":[{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"0"},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"3"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}}],"kind":"BinaryOperator","opcode":"&&","type":{"qualType":"float"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"error","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"IfStmt"},{"inner":[{"inner":[{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"0"}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}},{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"0.29999999999999999"}],"kind":"BinaryOperator","opcode":"||","type":{"qualType":"float"}},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"ok","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}}],"kind":"CallExpr"}],"kind":"IfStmt"},{"inner":[{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"1"}],"kind":"VarDecl","name":"i","opcode":"=","type":{"qualType":"int"}},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"0"}],"kind":"VarDecl","name":"p","opcode":"=","type":{"qualType":"int"}}],"kind":"DeclStmt"},{"inner":[{"inner":[{"castKind":"FloatingCast","inner":[{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"1"},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"2"}],"kind":"InitListExpr","type":{"qualType":"double"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"arr","opcode":"=","type":{"qualType":"float"}}],"kind":"DeclStmt"},{"inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_getfarray","type":{"qualType":"int()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"arr","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"CallExpr","type":{"qualType":"int"}}],"kind":"VarDecl","name":"len","opcode":"=","type":{"qualType":"int"}}],"kind":"DeclStmt"},{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"i","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"MAX","type":{"qualType":"const int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const int"}}],"kind":"BinaryOperator","opcode":"<","type":{"qualType":"int"}},{"inner":[{"inner":[{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_getfloat","type":{"qualType":"float()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float()"}}],"kind":"CallExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"input","opcode":"=","type":{"qualType":"float"}}],"kind":"DeclStmt"},{"inner":[{"inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"PI","type":{"qualType":"const float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"input","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"input","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"const float"}}],"kind":"VarDecl","name":"area","opcode":"=","type":{"qualType":"float"}},{"inner":[{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"circle_area","type":{"qualType":"float()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"input","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"CallExpr","type":{"qualType":"float"}}],"kind":"VarDecl","name":"area_trunc","opcode":"=","type":{"qualType":"float"}}],"kind":"DeclStmt"},{"inner":[{"inner":[{"castKind":"ArrayToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"arr","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr"},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"p","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"ArraySubscriptExpr","type":{"qualType":"float"}},{"inner":[{"castKind":"LValueToRValue","inner":[{"inner":[{"castKind":"ArrayToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"arr","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr"},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"p","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"ArraySubscriptExpr","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"input","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"+","type":{"qualType":"float"}}],"kind":"BinaryOperator","opcode":"="},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putfloat","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"area","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"32"}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putint","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"area_trunc","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"CallExpr"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putch","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"10"}],"kind":"CallExpr"},{"inner":[{"kind":"DeclRefExpr","name":"i","type":{"qualType":"int"}},{"castKind":"FloatingToIntegral","inner":[{"inner":[{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"i","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"IntegralToFloating"}},{"inner":[{"inner":[{"kind":"FloatingLiteral","type":{"qualType":"double"},"value":"10"}],"kind":"UnaryOperator","opcode":"-","type":{"qualType":"double"}}],"kind":"UnaryOperator","opcode":"-","type":{"qualType":"double"}}],"kind":"BinaryOperator","opcode":"*","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr"}],"kind":"BinaryOperator","opcode":"=","type":{"qualType":"int"}},{"inner":[{"kind":"DeclRefExpr","name":"p","type":{"qualType":"int"}},{"inner":[{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"p","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}},{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"1"}],"kind":"BinaryOperator","opcode":"+","type":{"qualType":"int"}}],"kind":"BinaryOperator","opcode":"="}],"kind":"CompoundStmt"}],"kind":"WhileStmt"},{"inner":[{"castKind":"FunctionToPointerDecay","inner":[{"kind":"DeclRefExpr","name":"_sysy_putfarray","type":{"qualType":"void()"}}],"kind":"ImplicitCastExpr","type":{"qualType":"void()"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"len","type":{"qualType":"int"}}],"kind":"ImplicitCastExpr","type":{"qualType":"int"}},{"castKind":"LValueToRValue","inner":[{"kind":"DeclRefExpr","name":"arr","type":{"qualType":"float"}}],"kind":"ImplicitCastExpr","type":{"qualType":"float"}}],"kind":"CallExpr"},{"inner":[{"kind":"IntegerLiteral","type":{"qualType":"int"},"value":"0"}],"kind":"ReturnStmt"}],"kind":"CompoundStmt"}],"kind":"FunctionDecl","name":"main","type":{"qualType":"int()"}}],"kind":"TranslationUnitDecl"}
